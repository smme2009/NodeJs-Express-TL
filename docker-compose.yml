services:
    mysql:
        image: mysql:8.4
        container_name: mysql
        restart: unless-stopped
        ports:
            - 3306:3306
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_ROOT_HOST: localhost
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 10s
            timeout: 10s
            retries: 5
        command:
            [
                "mysqld",
                "--character-set-server=utf8mb4",
                "--collation-server=utf8mb4_general_ci",
            ]
        volumes:
            - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
            - ./docker-data/mysql:/var/lib/mysql
    node:
        image: node
        container_name: node
        restart: unless-stopped
        ports:
            - 3000:3000
        depends_on:
            mysql:
                condition: service_healthy
        working_dir: /var/www/html
        entrypoint: ["sh", "./docker/node/init.sh"]
        volumes:
            - ./:/var/www/html
    nginx:
        image: nginx
        container_name: nginx
        restart: unless-stopped
        ports:
            - 80:80
            - 443:443
        depends_on:
            - node
        volumes:
            - ./docker/nginx/tl.conf:/etc/nginx/conf.d/tl.conf
            - ./docker-data/certbot/www/:/var/www/certbot/
            - ./docker-data/certbot/conf/:/etc/letsencrypt/
    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
            - ./docker-data/certbot/www/:/var/www/certbot/
            - ./docker-data/certbot/conf/:/etc/letsencrypt/
